% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preview.R
\name{preview_gaez_map}
\alias{preview_gaez_map}
\title{Preview GAEZ Data as Interactive Map}
\usage{
preview_gaez_map(
  variable = "RES05-YX",
  time_period = "FP4160",
  start_year = NULL,
  end_year = NULL,
  climate_model = NULL,
  ssp = "SSP370",
  crop = "WHEA",
  water_management_level = "HRLM",
  water_supply = "WSR",
  resolution = NA,
  country = NULL,
  bbox = NULL,
  width = 800,
  height = 600,
  viewer = c("leaflet", "static", "auto"),
  display = TRUE,
  save_path = NULL,
  return_data = FALSE,
  interactive = TRUE,
  verbose = TRUE,
  color_palette = "YlOrRd",
  na_color = "transparent",
  opacity = 0.7
)
}
\arguments{
\item{variable}{Character - Variable name or code. Default is "RES05-YX"
(attainable yield). Use \code{lookup_gaez_variable()} to find variable codes.}

\item{time_period}{Character - Time period code. Default is "FP4160" (2041-2060).
Valid options: "HP8100", "HP0120", "FP2140", "FP4160", "FP6180", "FP8100"}

\item{start_year}{Numeric - Start year for time period lookup (optional). Can be
provided alone or with end_year. If only start_year is given, returns the time
period containing that year. If both years are provided and span multiple periods,
prompts for selection. Must be between 1981-2100.}

\item{end_year}{Numeric - End year for time period lookup (optional). Can be
provided alone or with start_year. If only end_year is given, returns the time
period containing that year. Must be between 1981-2100.}

\item{climate_model}{Character - Climate model. NULL for auto-selection based
on time period. Historical periods use "AGERA5", future periods default to
"ENSEMBLE". Other options: "GFDL-ESM4", "IPSL-CM6A-LR", "MPI-ESM1-2-HR",
"MRI-ESM2-0", "UKESM1-0-LL"}

\item{ssp}{Character - SSP scenario. Default is "SSP370". Historical periods
use "HIST". Future periods use "SSP126", "SSP370", or "SSP585".}

\item{crop}{Character - Crop name or code. Default is "WHEA" (wheat).
Use \code{lookup_gaez_crop()} to find crop codes.}

\item{water_management_level}{Character - Water management code. Default is
"HRLM" (High input, Rain-fed, Low management). Other options: "HILM"
(irrigated), "LRLM" (low input, rain-fed), "LILM" (low input, irrigated).}

\item{water_supply}{Character - Water supply code for actual yields/gaps
(themes 5-6). Default is "WSR" (rain-fed). Other options: "WSI" (irrigated),
"WST" (total).}

\item{resolution}{Character - Resolution preference. Options: "1km", "10km", or
NA (uses default for variable). Note: not all variables have multiple
resolutions.}

\item{country}{Character, SpatVector, or NULL - Geographic extent for preview.
\itemize{
\item NULL (default): Global extent
\item Character: Country name (e.g., "Niger") or ISO3 code (e.g., "NER")
\item SpatVector: Custom boundary object
}}

\item{bbox}{Numeric vector - Custom bounding box as c(xmin, ymin, xmax, ymax)
in WGS84 coordinates. Overridden by country if both are specified.}

\item{width}{Numeric - Preview image width in pixels (default: 800)}

\item{height}{Numeric - Preview image height in pixels (default: 600)}

\item{viewer}{Character - Display method for preview. Options:
\itemize{
\item "leaflet" (default): Interactive leaflet map with pan/zoom
\item "static": Static plot using terra::plot()
\item "auto": Automatically select based on environment
}}

\item{display}{Logical - Whether to display the map (default: TRUE). Set to
FALSE to return map object without displaying.}

\item{save_path}{Character - Optional file path to save the preview image.
If provided, saves as PNG for static plots or HTML for leaflet maps.}

\item{return_data}{Logical - Whether to return the underlying raster data
along with the map object (default: FALSE)}

\item{interactive}{Logical - Whether to prompt for user input when multiple
matches are found (for crops or time periods). Default is TRUE. Set to FALSE
to automatically select the best match without prompting.}

\item{verbose}{Logical - Whether to show detailed progress messages (default: TRUE)}

\item{color_palette}{Character - Color palette name for visualization. Default
is "YlOrRd". Other options: "viridis", "magma", "plasma", "RdYlGn", etc.
See ?leaflet::colorNumeric for more options.}

\item{na_color}{Character - Color for NA values (default: "transparent")}

\item{opacity}{Numeric - Overlay opacity (0-1, default: 0.7)}
}
\value{
Depends on viewer type:
\itemize{
\item "leaflet": A leaflet map object
\item "static": Returns NULL invisibly (displays plot)
}
If return_data = TRUE, returns a list with map and raster data.
}
\description{
Creates an interactive leaflet map preview of GAEZ v5 data without requiring
full dataset downloads. Attempts to use the GAEZ ImageServer REST API when
available, otherwise falls back to downloading and cropping the full dataset.
Supports both global and country-level previews.
}
\details{
\subsection{Preview Strategy}{

The function uses a two-tier strategy:
\enumerate{
\item \strong{REST API} (fast, no download): For all themes (1-6) when available
\item \strong{Download fallback} (slower, requires disk space): When REST API fails
}
}

\subsection{Geographic Extents}{

Three ways to specify extent:
\enumerate{
\item \strong{Global} (default): Shows entire world coverage
\item \strong{Country}: Automatically retrieves boundary and crops to extent
\item \strong{Custom bbox}: Manually specify rectangular bounds
}

Priority: country > bbox > global
}

\subsection{Visualization Options}{

\strong{Leaflet viewer} (recommended):
\itemize{
\item Interactive pan and zoom
\item Multiple basemap options (OpenStreetMap, Satellite)
\item Toggle layers on/off
\item Hover coordinates
}

\strong{Static viewer}:
\itemize{
\item Simple quick plot
\item Useful for scripting/automation
\item Less memory intensive
}
}

\subsection{Color Palettes}{

The function automatically handles data ranges and creates appropriate color
scales. Negative and zero values are filtered out for yield data.
}
}
\examples{
\dontrun{
# Global preview of maize yield (historical)
preview_gaez_map(
  crop = "maize",
  time_period = "HP0120"
)

# Country-level preview
preview_gaez_map(
  crop = "wheat",
  time_period = "FP4160",
  ssp = "SSP370",
  country = "Niger"
)

# Custom bounding box (West Africa)
preview_gaez_map(
  crop = "sorghum",
  time_period = "HP0120",
  bbox = c(-20, 5, 20, 25)
)

# Static plot for quick inspection
preview_gaez_map(
  crop = "rice",
  country = "NER",
  viewer = "static"
)

# Save preview to file
preview_gaez_map(
  crop = "maize",
  country = "Niger",
  save_path = "niger_maize_preview.html"
)

# Return data for further analysis
result <- preview_gaez_map(
  crop = "wheat",
  country = "Niger",
  return_data = TRUE
)
terra::plot(result$data)
print(result$map)
}

}
\seealso{
\code{\link{load_gaez_data}} for loading full datasets,
\code{\link{build_gaez_url}} for URL construction,
\code{\link{get_country_boundary}} for country boundaries
}
