% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{get_country_boundary}
\alias{get_country_boundary}
\title{Get country boundary for spatial cropping}
\usage{
get_country_boundary(country, level = 0, cache_dir = NULL, verbose = TRUE)
}
\arguments{
\item{country}{Character or SpatVector - Country identifier or boundary.
Can be:
\itemize{
\item Country name (e.g., "Niger", "United States")
\item ISO3 code (e.g., "NER", "USA")
\item terra SpatVector object with polygon(s)
}}

\item{level}{Numeric - GADM administrative level (default: 0 = country level).
Higher levels provide finer subdivisions (1 = provinces, 2 = districts, etc.)}

\item{cache_dir}{Character - Directory to cache GADM downloads. If NULL,
uses package cache directory. Default: NULL.}

\item{verbose}{Logical - Whether to print progress messages (default: TRUE)}
}
\value{
A terra SpatVector object containing the country boundary polygon(s)
}
\description{
Retrieves or uses a country boundary as a terra SpatVector for cropping
GAEZ rasters to country-level extents. Supports country names, ISO3 codes,
or custom SpatVector objects. Automatically downloads GADM boundaries and
caches them locally to avoid repeated downloads.
}
\details{
\subsection{Country Matching}{

The function uses \code{geodata::country_codes()} to match country inputs:
\itemize{
\item Exact ISO3 code match (case-insensitive)
\item Partial country name match (case-insensitive)
\item If multiple matches found, uses the first exact name match
}
}

\subsection{Boundary Downloads}{

Country boundaries are downloaded from the GADM database via \code{geodata::gadm()}:
\itemize{
\item Downloads are cached locally to avoid repeated requests
\item Default cache location: \link{package_cache}/GADM/
\item Boundaries are in WGS84 coordinate system (EPSG:4326)
}
}

\subsection{Administrative Levels}{

GADM provides multiple administrative levels:
\itemize{
\item Level 0: Country boundaries
\item Level 1: First-level subdivisions (states, provinces)
\item Level 2: Second-level subdivisions (districts, counties)
\item Levels 3-5: Finer subdivisions (availability varies by country)
}
}

\subsection{Error Handling}{

The function provides informative errors for:
\itemize{
\item Country not found - suggests similar names
\item Ambiguous matches - lists all matches
\item Download failures - reports network/server issues
}
}
}
\examples{
\dontrun{
# Get country boundary by name
niger <- get_country_boundary("Niger")
terra::plot(niger)

# Get country boundary by ISO3 code
usa <- get_country_boundary("USA")

# Get provincial boundaries (level 1)
niger_provinces <- get_country_boundary("Niger", level = 1)

# Use custom SpatVector
library(geodata)
custom_boundary <- gadm(country = "NER", level = 0)
boundary <- get_country_boundary(custom_boundary)
}

}
\seealso{
\code{\link{load_gaez_data}}, \code{\link{combine_gaez_batch}}
}
