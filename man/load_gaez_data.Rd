% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/download.R
\name{load_gaez_data}
\alias{load_gaez_data}
\title{Load GAEZ data into R workspace}
\usage{
load_gaez_data(
  variable = "RES05-YX",
  time_period = "FP4160",
  start_year = NULL,
  end_year = NULL,
  climate_model = NULL,
  ssp = "SSP370",
  crop = "WHEA",
  water_management_level = "HRLM",
  water_supply = "WSR",
  resolution = NA,
  download_dir = NULL,
  overwrite = FALSE,
  validate_inputs = TRUE,
  verbose = TRUE,
  return_metadata = FALSE
)
}
\arguments{
\item{variable}{Character - Variable code (e.g., "RES05-YX", "RES02-YLD").
Default is "RES05-YX" (attainable yield).}

\item{time_period}{Character - Time period code (default: "FP4160"). See
\code{?build_gaez_url} for valid options.}

\item{start_year}{Numeric - Start year for time period lookup (optional)}

\item{end_year}{Numeric - End year for time period lookup (optional)}

\item{climate_model}{Character - Climate model (auto-selected if NULL)}

\item{ssp}{Character - SSP scenario (default: "SSP370")}

\item{crop}{Character - Crop name or code (default: "WHEA" for wheat)}

\item{water_management_level}{Character - Water management level (default: "HRLM")}

\item{water_supply}{Character - Water supply code (default: "WSR")}

\item{resolution}{Character - Resolution ("1km", "10km", or NA)}

\item{download_dir}{Character - Custom download directory. If NULL, uses
"Data/GAEZ/" or creates it if it doesn't exist.}

\item{overwrite}{Logical - Whether to overwrite existing files (default: FALSE).
If FALSE and file exists, returns immediately without downloading.}

\item{validate_inputs}{Logical - Whether to validate inputs before download
(default: TRUE). Reserved for future use.}

\item{verbose}{Logical - Whether to show detailed progress messages (default: TRUE)}

\item{return_metadata}{Logical - If TRUE, returns a list containing both the
SpatRaster object and the download metadata. If FALSE (default), returns
only the SpatRaster object.}
}
\value{
If \code{return_metadata = FALSE} (default), returns a terra SpatRaster
object. If \code{return_metadata = TRUE}, returns a list with two elements:
\itemize{
\item \code{raster}: The terra SpatRaster object
\item \code{metadata}: Download result metadata (file path, URL, size, etc.)
}
}
\description{
A convenient wrapper around \code{download_gaez_dataset()} that downloads
(if needed) and immediately loads GAEZ data into R as a terra SpatRaster
object. Automatically checks if the file is already cached locally to avoid
redundant downloads. This provides a streamlined one-function workflow for
accessing GAEZ data.
}
\details{
The function performs the following workflow:
\enumerate{
\item Calls \code{download_gaez_dataset()} with provided parameters
\item If file exists locally, download is skipped (fast)
\item If file doesn't exist, downloads from FAO Google Cloud Storage
\item Loads the GeoTIFF file using \code{terra::rast()}
\item Returns the raster ready for analysis
}
\subsection{Advantages over separate download + load}{

\itemize{
\item Single function call simplifies workflow
\item Automatic caching - no need to manually check for existing files
\item Error handling combines download and load validation
\item Optional metadata return provides full download information
}
}

\subsection{Memory considerations}{

Large rasters may consume significant memory. For very large datasets or
limited RAM, consider working with file paths and loading subsets as needed.
}
}
\examples{
\dontrun{
# Basic usage - load maize yield data
maize <- load_gaez_data(
  crop = "maize",
  time_period = "HP0120",
  climate_model = "AGERA5"
)
terra::plot(maize)

# Load with metadata
result <- load_gaez_data(
  crop = "wheat",
  time_period = "FP4160",
  ssp = "SSP370",
  return_metadata = TRUE
)
terra::plot(result$raster)
print(result$metadata$file_path)
print(result$metadata$file_size)

# Compare scenarios by loading multiple datasets
ssp126 <- load_gaez_data(crop = "sorghum", time_period = "FP4160", ssp = "SSP126")
ssp370 <- load_gaez_data(crop = "sorghum", time_period = "FP4160", ssp = "SSP370")
ssp585 <- load_gaez_data(crop = "sorghum", time_period = "FP4160", ssp = "SSP585")

# Calculate differences
diff_370_126 <- ssp370 - ssp126
terra::plot(diff_370_126, main = "Yield change: SSP370 vs SSP126")

# If file already cached, loads instantly
maize2 <- load_gaez_data(crop = "maize", time_period = "HP0120")  # No download!
}

}
\seealso{
\code{\link{download_gaez_dataset}} for download-only functionality,
\code{\link{batch_download_gaez_datasets}} for downloading multiple files,
\code{\link{combine_gaez_batch}} for combining multiple rasters
}
